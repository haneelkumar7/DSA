//memoisation

class Solution {
private:
    int solve(int i, int j, string s, string t,vector<vector<int>> &dp){
        if(i<0) return j+1;
        if(j<0) return i+1;
        if(dp[i][j] != -1) return dp[i][j];
        if(s[i] == t[j]) return dp[i][j] = solve(i-1,j-1,s,t,dp);
        
        int insert = 1 + solve(i,j-1,s,t,dp);
        int delet = 1 + solve(i-1,j,s,t,dp);
        int replace = 1 + solve(i-1,j-1,s,t,dp);
        
        return dp[i][j] = min(insert, min(delet,replace));
    }
public:
    int minDistance(string s1, string s2) {
        int m = s1.size();
        int n = s2.size();
        vector<vector<int>> dp(m,vector<int> (n,-1));
        return solve(m-1,n-1,s1,s2,dp);
    }
};
